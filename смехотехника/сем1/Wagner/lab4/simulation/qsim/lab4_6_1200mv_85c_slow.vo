// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "04/05/2024 21:45:39"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab4 (
	Q,
	reset_n,
	X,
	clk,
	Y);
output 	[2:1] Q;
input 	reset_n;
input 	[2:1] X;
input 	clk;
output 	[2:1] Y;

// Design Ports Information
// Q[2]	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[1]	=>  Location: PIN_1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Y[2]	=>  Location: PIN_11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Y[1]	=>  Location: PIN_2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[2]	=>  Location: PIN_25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X[1]	=>  Location: PIN_3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset_n	=>  Location: PIN_24,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("lab4_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \Q[2]~output_o ;
wire \Q[1]~output_o ;
wire \Y[2]~output_o ;
wire \Y[1]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \X[1]~input_o ;
wire \X[2]~input_o ;
wire \inst3~0_combout ;
wire \reset_n~input_o ;
wire \reset_n~inputclkctrl_outclk ;
wire \inst3~q ;
wire \inst4~0_combout ;
wire \inst4~q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y18_N16
cycloneive_io_obuf \Q[2]~output (
	.i(\inst4~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N2
cycloneive_io_obuf \Q[1]~output (
	.i(\inst3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y18_N23
cycloneive_io_obuf \Y[2]~output (
	.i(!\inst4~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[2]~output .bus_hold = "false";
defparam \Y[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N9
cycloneive_io_obuf \Y[1]~output (
	.i(\inst4~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[1]~output .bus_hold = "false";
defparam \Y[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N15
cycloneive_io_ibuf \X[1]~input (
	.i(X[1]),
	.ibar(gnd),
	.o(\X[1]~input_o ));
// synopsys translate_off
defparam \X[1]~input .bus_hold = "false";
defparam \X[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \X[2]~input (
	.i(X[2]),
	.ibar(gnd),
	.o(\X[2]~input_o ));
// synopsys translate_off
defparam \X[2]~input .bus_hold = "false";
defparam \X[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N18
cycloneive_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = !\X[2]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(\X[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3~0 .lut_mask = 16'h0F0F;
defparam \inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \reset_n~input (
	.i(reset_n),
	.ibar(gnd),
	.o(\reset_n~input_o ));
// synopsys translate_off
defparam \reset_n~input .bus_hold = "false";
defparam \reset_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \reset_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\reset_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \reset_n~inputclkctrl .clock_type = "global clock";
defparam \reset_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y23_N19
dffeas inst3(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\inst3~0_combout ),
	.asdata(vcc),
	.clrn(\reset_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst3~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst3.is_wysiwyg = "true";
defparam inst3.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N16
cycloneive_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = (\X[1]~input_o  & (\X[2]~input_o  & (!\inst4~q ))) # (!\X[1]~input_o  & (((\inst3~q ) # (!\inst4~q ))))

	.dataa(\X[1]~input_o ),
	.datab(\X[2]~input_o ),
	.datac(\inst4~q ),
	.datad(\inst3~q ),
	.cin(gnd),
	.combout(\inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst4~0 .lut_mask = 16'h5D0D;
defparam \inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y23_N17
dffeas inst4(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\inst4~0_combout ),
	.asdata(vcc),
	.clrn(\reset_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst4~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst4.is_wysiwyg = "true";
defparam inst4.power_up = "low";
// synopsys translate_on

assign Q[2] = \Q[2]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Y[2] = \Y[2]~output_o ;

assign Y[1] = \Y[1]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
