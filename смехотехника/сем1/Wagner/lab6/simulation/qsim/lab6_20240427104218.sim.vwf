/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("allowload")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("loaddata")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("loaddata[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "loaddata";
}

SIGNAL("loaddata[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "loaddata";
}

SIGNAL("loaddata[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "loaddata";
}

SIGNAL("loaddata[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "loaddata";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("U")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("U[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "U";
}

SIGNAL("U[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "U";
}

SIGNAL("U[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "U";
}

SIGNAL("U[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "U";
}

SIGNAL("updown")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inst1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("inst2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("inst3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("inst4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

GROUP("Q")
{
	MEMBERS = "Q[0]", "Q[1]", "Q[2]", "Q[3]";
}

GROUP("inst")
{
	MEMBERS = "inst1", "inst2", "inst3", "inst4";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("Q[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.368;
			LEVEL 0 FOR 12.252;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 19.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 4.358;
		}
	}
}

TRANSITION_LIST("Q[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.762;
			LEVEL 0 FOR 13.165;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 40.108;
			LEVEL 0 FOR 39.892;
			LEVEL 1 FOR 22.073;
		}
	}
}

TRANSITION_LIST("Q[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.17;
			LEVEL 0 FOR 14.395;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 80.011;
			LEVEL 0 FOR 79.989;
			LEVEL 1 FOR 22.435;
		}
	}
}

TRANSITION_LIST("Q[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.012;
			LEVEL 0 FOR 15.385;
			LEVEL 1 FOR 160.02;
			LEVEL 0 FOR 159.98;
			LEVEL 1 FOR 160.02;
			LEVEL 0 FOR 159.98;
			LEVEL 1 FOR 160.02;
			LEVEL 0 FOR 159.98;
			LEVEL 1 FOR 21.603;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("allowload")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 960.0;
		}
	}
}

TRANSITION_LIST("loaddata[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 960.0;
		}
	}
}

TRANSITION_LIST("loaddata[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("loaddata[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 960.0;
		}
	}
}

TRANSITION_LIST("loaddata[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.118;
			LEVEL 0 FOR 12.25;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 20.007;
			LEVEL 1 FOR 19.993;
			LEVEL 0 FOR 4.639;
		}
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.109;
			LEVEL 0 FOR 12.252;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 24.639;
		}
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.419;
			LEVEL 0 FOR 12.559;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 80.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 24.022;
		}
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.371;
			LEVEL 0 FOR 12.559;
			LEVEL 1 FOR 160.048;
			LEVEL 0 FOR 159.952;
			LEVEL 1 FOR 160.048;
			LEVEL 0 FOR 159.952;
			LEVEL 1 FOR 160.048;
			LEVEL 0 FOR 159.952;
			LEVEL 1 FOR 24.07;
		}
	}
}

TRANSITION_LIST("S[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.118;
			LEVEL 0 FOR 12.261;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 4.627;
		}
	}
}

TRANSITION_LIST("S[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.139;
			LEVEL 0 FOR 32.26;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 60.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 40.005;
			LEVEL 1 FOR 39.995;
			LEVEL 0 FOR 24.606;
		}
	}
}

TRANSITION_LIST("S[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.299;
			LEVEL 0 FOR 72.271;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 80.016;
			LEVEL 1 FOR 79.984;
			LEVEL 0 FOR 80.016;
			LEVEL 1 FOR 79.984;
			LEVEL 0 FOR 80.016;
			LEVEL 1 FOR 79.984;
			LEVEL 0 FOR 80.016;
			LEVEL 1 FOR 79.984;
			LEVEL 0 FOR 80.016;
			LEVEL 1 FOR 79.984;
			LEVEL 0 FOR 64.446;
		}
	}
}

TRANSITION_LIST("S[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.156;
			LEVEL 0 FOR 32.6;
			LEVEL 1 FOR 179.993;
			LEVEL 0 FOR 160.007;
			LEVEL 1 FOR 159.993;
			LEVEL 0 FOR 160.007;
			LEVEL 1 FOR 159.993;
			LEVEL 0 FOR 144.251;
		}
	}
}

TRANSITION_LIST("U[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.148;
			LEVEL 0 FOR 12.276;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 20.002;
			LEVEL 1 FOR 19.998;
			LEVEL 0 FOR 4.578;
		}
	}
}

TRANSITION_LIST("U[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.368;
			LEVEL 0 FOR 32.227;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 40.047;
			LEVEL 0 FOR 39.953;
			LEVEL 1 FOR 4.405;
		}
	}
}

TRANSITION_LIST("U[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.125;
			LEVEL 0 FOR 72.644;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 80.003;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 80.003;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 80.003;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 80.003;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 80.003;
			LEVEL 1 FOR 79.997;
			LEVEL 0 FOR 44.234;
		}
	}
}

TRANSITION_LIST("U[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.138;
			LEVEL 0 FOR 152.642;
			LEVEL 1 FOR 159.999;
			LEVEL 0 FOR 160.001;
			LEVEL 1 FOR 159.999;
			LEVEL 0 FOR 160.001;
			LEVEL 1 FOR 159.999;
			LEVEL 0 FOR 44.221;
		}
	}
}

TRANSITION_LIST("updown")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 900.0;
		}
	}
}

TRANSITION_LIST("inst1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 12.274;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 7.726;
		}
	}
}

TRANSITION_LIST("inst2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 13.273;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 26.727;
		}
	}
}

TRANSITION_LIST("inst3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 14.406;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 25.594;
		}
	}
}

TRANSITION_LIST("inst4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 15.405;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 24.595;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inst";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "inst1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "inst2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "inst3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "inst4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "U";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "U[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "U[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "U[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "U[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "allowload";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "loaddata";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "loaddata[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "loaddata[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "loaddata[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "loaddata[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "S[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "S[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "S[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "S[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "updown";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
