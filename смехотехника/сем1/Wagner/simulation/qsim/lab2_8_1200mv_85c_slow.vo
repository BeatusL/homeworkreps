// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "02/27/2024 16:47:40"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab2 (
	y,
	x);
output 	y;
input 	[4:0] x;

// Design Ports Information
// y	=>  Location: PIN_72,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x[1]	=>  Location: PIN_25,	 I/O Standard: 3.3-V LVCMOS,	 Current Strength: Default
// x[4]	=>  Location: PIN_90,	 I/O Standard: 3.3-V LVCMOS,	 Current Strength: Default
// x[0]	=>  Location: PIN_24,	 I/O Standard: 3.3-V LVCMOS,	 Current Strength: Default
// x[3]	=>  Location: PIN_49,	 I/O Standard: 3.3-V LVCMOS,	 Current Strength: Default
// x[2]	=>  Location: PIN_46,	 I/O Standard: 3.3-V LVCMOS,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("lab2_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \y~output_o ;
wire \x[1]~input_o ;
wire \x[2]~input_o ;
wire \x[0]~input_o ;
wire \x[3]~input_o ;
wire \x[4]~input_o ;
wire \inst15~0_combout ;
wire \inst15~1_combout ;
wire \inst15~2_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X32_Y0_N9
cycloneive_io_obuf \y~output (
	.i(\inst15~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y~output_o ),
	.obar());
// synopsys translate_off
defparam \y~output .bus_hold = "false";
defparam \y~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \x[1]~input (
	.i(x[1]),
	.ibar(gnd),
	.o(\x[1]~input_o ));
// synopsys translate_off
defparam \x[1]~input .bus_hold = "false";
defparam \x[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N1
cycloneive_io_ibuf \x[2]~input (
	.i(x[2]),
	.ibar(gnd),
	.o(\x[2]~input_o ));
// synopsys translate_off
defparam \x[2]~input .bus_hold = "false";
defparam \x[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \x[0]~input (
	.i(x[0]),
	.ibar(gnd),
	.o(\x[0]~input_o ));
// synopsys translate_off
defparam \x[0]~input .bus_hold = "false";
defparam \x[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X13_Y0_N15
cycloneive_io_ibuf \x[3]~input (
	.i(x[3]),
	.ibar(gnd),
	.o(\x[3]~input_o ));
// synopsys translate_off
defparam \x[3]~input .bus_hold = "false";
defparam \x[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N8
cycloneive_io_ibuf \x[4]~input (
	.i(x[4]),
	.ibar(gnd),
	.o(\x[4]~input_o ));
// synopsys translate_off
defparam \x[4]~input .bus_hold = "false";
defparam \x[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X28_Y17_N24
cycloneive_lcell_comb \inst15~0 (
// Equation(s):
// \inst15~0_combout  = (\x[2]~input_o  & (!\x[3]~input_o  & ((\x[0]~input_o ) # (!\x[4]~input_o )))) # (!\x[2]~input_o  & (\x[4]~input_o  & ((\x[0]~input_o ) # (!\x[3]~input_o ))))

	.dataa(\x[2]~input_o ),
	.datab(\x[0]~input_o ),
	.datac(\x[3]~input_o ),
	.datad(\x[4]~input_o ),
	.cin(gnd),
	.combout(\inst15~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst15~0 .lut_mask = 16'h4D0A;
defparam \inst15~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X28_Y17_N10
cycloneive_lcell_comb \inst15~1 (
// Equation(s):
// \inst15~1_combout  = (\x[3]~input_o  & (!\x[0]~input_o  & (\x[2]~input_o  $ (\x[4]~input_o )))) # (!\x[3]~input_o  & (!\x[4]~input_o  & (\x[2]~input_o  $ (\x[0]~input_o ))))

	.dataa(\x[2]~input_o ),
	.datab(\x[0]~input_o ),
	.datac(\x[3]~input_o ),
	.datad(\x[4]~input_o ),
	.cin(gnd),
	.combout(\inst15~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst15~1 .lut_mask = 16'h1026;
defparam \inst15~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X28_Y17_N12
cycloneive_lcell_comb \inst15~2 (
// Equation(s):
// \inst15~2_combout  = \inst15~1_combout  $ (((\x[1]~input_o ) # (!\inst15~0_combout )))

	.dataa(\x[1]~input_o ),
	.datab(\inst15~0_combout ),
	.datac(gnd),
	.datad(\inst15~1_combout ),
	.cin(gnd),
	.combout(\inst15~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst15~2 .lut_mask = 16'h44BB;
defparam \inst15~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign y = \y~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
