param(
    [int]$balanceThreshold = 10
)

function Get-ProcessInfo {
    Get-Process | Select-Object Id, ProcessName, CPU
}

function Stop-ProcessById {
    param(
        [int]$processId
    )
    Stop-Process -Id $processId -Force
}

while ($true) {
    $processes = Get-ProcessInfo
    $totalCpu = ($processes | Measure-Object -Property CPU -Sum).Sum
    Write-Host "Current CPU load: $totalCpu"
    
    # Если степень загрузки превышает порог балансировки
    if ($totalCpu -gt $balanceThreshold) {
        # Сортируем процессы по убыванию их ID
        $sortedProcesses = $processes | Sort-Object -Property Id -Descending
        foreach ($process in $sortedProcesses) {
            Stop-ProcessById -processId $process.Id
            Write-Host "Process $($process.ProcessName) with ID $($process.Id) terminated due to high CPU load."
            break
        }
    }
    # Ожидаем некоторое время перед повторной проверкой степени загрузки
    Start-Sleep -Seconds 5
}
