from ring import Ring


def test_polynomial_ring():
    # Создаем полиномы
    p1 = Ring([1, 2])  # 2x + 1
    p2 = Ring([3, 1])  # x + 3
    p3 = Ring([0, 1])  # x
    #p4 = Ring([0, 0, 0, 3, 0, 0]) # 3x^3 + 0x^2 + 0x + 0
    p0 = Ring([0])     # 0
    one = Ring([1])  # 1

    print("1. Проверка коммутативности сложения")
    print(f"p1 + p2 = p2 + p1  => {p1+p2} = {p2+p1}")
    if (p1 + p2) != (p2 + p1):
        print("Ошибка: Сложение не коммутативно\n")
    else:
        print("Свойство коммутативности сложения не нарушено\n")

    print("2. Проверка ассоциативности сложения")
    print(f"(p1 + p2) + p3 = p1 + (p2 + p3)  => {(p1 + p2) + p3} = {p1 + (p2 + p3)}")
    if (p1 + p2) + p3 != p1 + (p2 + p3):
        print("Ошибка: Сложение не ассоциативно\n")
    else:
        print("Свойство ассоциативности сложения не нарушено\n")

    print("3. Проверка существования нуля")
    print(f"p1 * p0 = p0  => {p1 * p0} = {p0}")
    if p1 * p0 != p0:
        print("Ошибка: Не существует нуля\n")
    else:
        print("Свойство существования нуля не нарушено\n")

    print("4. Проверка коммутативности умножения")
    print(f"p1 * p2 = p2 * p1  => {p1 * p2} = {p2 * p1}")
    if (p1 * p2) != (p2 * p1):
        print("Ошибка: Умножение не коммутативно\n")
    else:
        print("Свойство коммутативности умножения не нарушено\n")

    # 
    print("5. Проверка ассоциативности умножения")
    print(f"(p1 * p2) * p3 = p1 * (p2 * p3)  => {(p1 * p2) * p3} = {p1 * (p2 * p3)}")
    if (p1 * p2) * p3 != p1 * (p2 * p3):
        print("Ошибка: Умножение не ассоциативно\n")
    else:
        print("Свойство ассоциативности умножения не нарушено\n")

    print("6. Проверка дистрибутивности")
    print(f"p1 * (p2 + p3) = (p1 * p2) + (p1 * p3)  => {p1 * (p2 + p3)} = {(p1 * p2) + (p1 * p3)}")
    if p1 * (p2 + p3) != (p1 * p2) + (p1 * p3):
        print("Ошибка: Умножение не дистрибутивно\n")
    else:
        print("Свойство дистрибутивности не нарушено\n")

    print("7.  Проверка существования единицы")
    print(f" p1 * one = p1  => {p1 * one} = {p1}")
    if p1 * one != p1:
        print("Ошибка: Не существует единицы\n")
    else:
        print("Свойство существования единицы не нарушено\n")


# Запуск тестов
test_polynomial_ring()


p1 = Ring([1, 2])  # x + 2
p2 = Ring([-1, -2])  # -x - 2
p3 = p1 + p2
p4 = p1 * p2
print(f"p1 = {p1}")
print(f"p2 = {p2}")
print(f"p1 + p2 = {p3}")
print(f"p1 * p2 = {p4}")


